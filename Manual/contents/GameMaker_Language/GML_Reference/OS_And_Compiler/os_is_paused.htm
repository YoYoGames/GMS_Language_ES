<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>os_is_paused</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for os_is_paused" />
  <meta name="rh-index-keywords" content="os_is_paused" />
  <meta name="search-keywords" content="os_is_paused" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>os_is_paused</h1>
  <p>Cuando se desarrolla para dispositivos móviles, es necesario tener una forma de comprobar si el dispositivo sigue centrado en tu juego o no, especialmente porque si tu juego está en un dispositivo <span class="notranslate">iOS</span>, <span class="notranslate">Android</span> o <span class="notranslate">Windows</span> Phone entonces puede ser interrumpido por las llamadas telefónicas y otras aplicaciones.
    Puedes utilizar esta función para comprobar si el dispositivo está en pausa o no.</p>
  <p>Vale la pena señalar que esta función ejecutará cualquier código que esté contenido en el bloque de código en los dispositivos, pero entonces <span class="notranslate">GameMaker Studio 2</span> se pondrá en pausa inmediatamente después, ya que el dispositivo almacena en caché el juego como un proceso de fondo. Así que si tienes algo
    como el código de ejemplo proporcionado a continuación, la instancia que se creará no aparecerá ni ejecutará ninguno de sus eventos <i>hasta después de que el juego se haya reiniciado desde el estado de la cach</i>é. Esto significa que puedes preferir que la función <tt>os_is_paused</tt> llame a una alarma y luego en el evento de la alarma (que se activará cuando el dispositivo esté en pausa pero no se ejecutará hasta que se desactive) crear un menú de pausa, reiniciar la música, etc.</p>
  <p>Si está utilizando esta función en <span class="notranslate">Windows</span>, <span class="notranslate">Ubuntu</span><span class="notranslate">(Linux</span>), MacOS o plataformas HTML5, entonces la función sólo se cambia por <b>un paso</b> a <tt>true</tt> cuando el juego pierde el foco, y luego volverá a devolver <tt>false</tt> hasta que el juego vuelva
    al foco (y lo pierda de nuevo). Esto se debe a que estas plataformas no almacenan en caché las aplicaciones y los juegos, por lo que éstos seguirán ejecutándose en segundo plano.</p>
  <p class="note"><b>NOTA</b>: En los dispositivos móviles, los sonidos y la música se detendrán cuando el sistema operativo esté en pausa. <b>No</b> se reiniciarán de nuevo a menos que los inicies específicamente con la función correspondiente.</p>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code">os_is_paused()</p>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code">Booleano</p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p class="code">if os_is_paused()<br> {
    <br> if !instance_exists(obj_PauseMenu)<br> {
    <br> instance_create_layer(0, 0, &quot;Controllers&quot;, obj_PauseMenu);<br> }
    <br> }
  </p>
  <p>El código anterior comprueba si el juego ha sido pausado, y si lo ha sido entonces crea una instancia del objeto &quot;obj_PauseMenu&quot; si no existe ya ninguna.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="OS_And_Compiler.htm">Sistema operativo y compilador</a></div>
        <div style="float:right">Siguiente: <a href="os_is_network_connected.htm">os_is_network_connected</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
os_is_paused
-->
  <!-- TAGS
os_is_paused
-->
</body>
</html>