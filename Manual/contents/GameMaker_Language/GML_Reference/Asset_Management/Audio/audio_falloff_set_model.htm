<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>audio_falloff_set_model</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function audio_falloff_set_model" />
  <meta name="rh-index-keywords" content="audio_falloff_set_model,audio_falloff_exponent_distance,audio_falloff_exponent_distance_clamped,audio_falloff_inverse_distance,audio_falloff_inverse_distance_clamped,audio_falloff_linear_distance,audio_falloff_linear_distance_clamped,audio_falloff_none" />
  <meta name="search-keywords" content="audio_falloff_set_model,audio_falloff_exponent_distance,audio_falloff_exponent_distance_clamped,audio_falloff_inverse_distance,audio_falloff_inverse_distance_clamped,audio_falloff_linear_distance,audio_falloff_linear_distance_clamped,audio_falloff_none" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>audio_falloff_set_model</h1>
  <p>Para añadir más versatilidad al motor de audio, <span class="notranslate">GameMaker Studio 2</span> te permite seleccionar el modelo de decaimiento que se adapte a tu juego. Este modelo se utilizará para <b>todas las</b> funciones de audio del juego o la aplicación, por lo que debes asegurarte de que el modelo que elijas sea el correcto, ya que cada uno de ellos afectará a la forma en que el oyente escucha.
    elija es el correcto, ya que cada uno afectará a la forma en que el oyente percibe los sonidos que reproduces a través de emisores o con la función <a><tt>audio_play_sound_at</tt></a>.</p>
  <p>Cuando configures el decaimiento en tu juego con las funciones apropiadas, hay tres argumentos que tendrás que establecer, y cada uno es apropiado para un modelo específico, y afectará a la forma en que el sonido final es &quot;escuchado&quot; por el jugador dependiendo de
    dependiendo de la distancia a la que se encuentre el oyente de la fuente. Los tres argumentos son:</p>
  <ul class="colour">
    <li><b>Distancia de referencia</b>: es la distancia desde el oyente, la distancia por debajo de la cual el volumen para el sonido que se reproduce normalmente caería a la mitad antes de ser influenciado por el factor de roll-off o la distancia máxima especificada.<b></b></li>
    <li><b>distancia máxima</b>: establece la distancia en la que ya no habrá ninguna atenuación del sonido de la fuente. Puede ser el punto en el que ya no se oye el sonido <i>o</i> el punto en el que el volumen del sonido ya no disminuye por debajo de
      el umbral mínimo definido por el modelo elegido.<b></b></li>
    <li><b>Factor</b> de decaimiento - El factor de decaimiento se utiliza en la atenuación de la distancia basada en el modelo de distancia inversa y establece el umbral mínimo final para un sonido con decaimiento.</li>
  </ul>
  <p>Los modelos de desvanecimiento que se ven afectados por estos argumentos están representados en <span class="notranslate">GameMaker Studio 2</span> por las siguientes constantes (la tabla muestra también los cálculos exactos utilizados):</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>Constante</th>
        <th>Función</th>
      </tr>
      <tr>
        <td>audio_falloff_exponent_distance</td>
        <td><br> ganancia = (distancia_de_escucha / distancia_de_referencia) ^ (factor_de_fallo)</td>
      </tr>
      <tr>
        <td>audio_falloff_exponent_distance_clamped</td>
        <td><br> distancia = clamp(distancia_escucha, distancia_de_referencia, distancia_máxima)<br> ganancia = (distancia / distancia_de_referencia) ^ (-falloff_factor)</td>
      </tr>
      <tr>
        <td>audio_falloff_inverse_distance</td>
        <td><br> ganancia = distancia_de_referencia / (distancia_de_referencia + factor_de_descenso * (distancia_de_escucha - distancia_de_referencia))</td>
      </tr>
      <tr>
        <td>audio_falloff_inverse_distance_clamped</td>
        <td><br> distancia = clamp(distancia_escucha, distancia_de_referencia, distancia_máxima)<br> ganancia = distancia_de_referencia / (distancia_de_referencia + falloff_factor * (distancia - distancia_de_referencia))</td>
      </tr>
      <tr>
        <td>audio_falloff_linear_distance</td>
        <td><br> distancia = min(distancia, distancia_máxima)<br> ganancia = (1 - falloff_factor * (distancia - distancia de referencia) / (distancia_máxima - distancia de referencia))</td>
      </tr>
      <tr>
        <td>audio_falloff_linear_distance_clamped</td>
        <td><br> distancia = clamp(distancia_escucha, distancia_de_referencia, distancia_máxima)<br> ganancia = (1 - falloff_factor * (distancia - distancia de referencia) / (distancia_máxima - distancia de referencia))</td>
      </tr>
      <tr>
        <td>audio_falloff_none</td>
        <td><br> ganancia = 1</td>
      </tr>
    </tbody>
  </table>
  <p><br> Los siguientes gráficos son representaciones visuales de cómo funcionan las constantes anteriores y afectan al sonido que se reproduce:</p>
  <p><img alt="Distance Model Examples" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Audio/Distance_Models.png" /></p>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code">audio_falloff_set_model(model);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descripción</th>
      </tr>
      <tr>
        <td>modelo</td>
        <td>La <b>constante</b> utilizada para establecer el modelo de decaimiento.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code">N/A</p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p class="code">audio_falloff_set_model(audio_falloff_exponent_distance_clamped);<br> audio_play_sound_at(snd_Waterfall, x, y, 0, 100, 300, 1, true, 1);</p>
  <p>El código anterior establece el modelo de decaimiento y luego reproduce el sonido indexado en la variable &quot;snd_Waterfall&quot;, que se reproducirá en bucle en su posición en la sala, con una referencia de decaimiento de 100, una distancia de decaimiento de 300, un factor de decaimiento de 1 y una prioridad baja
    prioridad.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="Audio.htm">Audio</a></div>
        <div style="float:right">Siguiente: <a href="audio_sound_gain.htm">audio_sound_gain</a></div>
        <div style="float:right"> </div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
audio_falloff_set_model
audio_falloff_exponent_distance
audio_falloff_exponent_distance_clamped
audio_falloff_inverse_distance
audio_falloff_inverse_distance_clamped
audio_falloff_linear_distance
audio_falloff_linear_distance_clamped
audio_falloff_none
-->
  <!-- TAGS
audio_falloff_set_model
-->
</body>
</html>