<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>instancia_más_cercana</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function instance_nearest" />
  <meta name="rh-index-keywords" content="instance_nearest" />
  <meta name="search-keywords" content="instance_nearest" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>instancia_más_cercana</h1>
  <p>Esta función comprobará todas las instancias del objeto dado para ver cuál está más cerca del punto x/y dado. Todas las comprobaciones se harán desde la posición x/y dada hasta el <i>origen</i> (la posición x/y) de las instancias del objeto especificado. Si no existen instancias
    del objeto, la función devolverá la palabra clave <a href="../../../GML_Overview/Instance_Keywords.htm"><span class="inline">noone</span></a>pero si hay instancias entonces devolverá el <a href="Instance_Variables/id.htm"><tt>id</tt></a>    de la instancia encontrada. Tenga en cuenta que si la instancia que ejecuta el código tiene el mismo índice de objeto que el objeto que se está comprobando, entonces se incluirá en la comprobación (esto incluye la comprobación de los objetos padre si la instancia que llama es también un hijo
    del padre).</p>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code">instancia_más_cercana(x, y, obj);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descripción</th>
      </tr>
      <tr>
        <td>x</td>
        <td>La posición x desde la que se comprueba.</td>
      </tr>
      <tr>
        <td>y</td>
        <td>La posición y desde la que se comprueba.</td>
      </tr>
      <tr>
        <td>obj</td>
        <td>El objeto que se va a comprobar para las instancias de.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code">Real (un valor de ID de instancia o la palabra clave <tt>noone</tt>)</p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p class="code">var inst, xx;<br> xx = x;<br> x -= 10000;<br> inst = instance_nearest(xx, y, object_index);<br> if inst != id<br> {
    <br> draw_line(x, y, inst.x, inst.y);<br> }
    <br> x += 10000;</p>
  <p>El código anterior mueve la instancia actual 10000 píxeles y luego comprueba su posición anterior para encontrar la instancia más cercana del mismo tipo de objeto. Si esa instancia es la misma, no hará nada más que volver a su posición original, pero si la instancia
    pero si la instancia encontrada es diferente, dibujará una línea entre las dos.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Volver: <a href="Instances.htm">Instancias</a></div>
        <div style="float:right">Siguiente: <a href="instance_number.htm">instance_number</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
instance_nearest
-->
  <!-- TAGS
instance_nearest
-->
</body>
</html>