<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>lista_de_posición_de_instancia</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function instance_position_list" />
  <meta name="rh-index-keywords" content="instance_position_list" />
  <meta name="search-keywords" content="instance_position_list" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>lista_de_posición_de_instancia</h1>
  <p>Con esta función puede comprobar una posición para una colisión con todas las instancias de otro objeto. Cuando se utiliza esta función, se comprueba un único punto en la sala para todas las instancias de un objeto, y la comprobación se hará contra el cuadro delimitador de las
    instancias o contra la máscara de las instancias si ese objeto tiene colisiones precisas marcadas.</p>
  <p>La función rellenará una <a href="../../Data_Structures/DS_Lists/DS_Lists.htm">lista DS</a> (creada previamente) con los valores únicos <a href="Instance_Variables/id.htm"><tt>id</tt></a> de todas las instancias del objeto que se consideran en
    colisión con la instancia que llama, y tiene la opción de ordenar la lista basándose en la distancia desde la posición que se está comprobando hasta el origen de las instancias que se encuentran en colisión. Tenga en cuenta que la función también acepta la palabra clave especial
    <a href="../../../<span class=" notranslate"="">GML_Overview/Instance_Keywords.htm"><b><tt>todo</tt></b></a>en cuyo caso se listarán todas las instancias que se encuentren en colisión. La función devuelve el número de instancias encontradas, o 0 si no se encuentra ninguna.</p>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code">instance_position_list(x, y, obj, list, ordered);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descripción</th>
      </tr>
      <tr>
        <td>x</td>
        <td>La posición x para comprobar las instancias.</td>
      </tr>
      <tr>
        <td>y</td>
        <td>La posición y para comprobar las instancias.</td>
      </tr>
      <tr>
        <td>obj</td>
        <td>El objeto que se va a comprobar para las instancias de.</td>
      </tr>
      <tr>
        <td>lista</td>
        <td>La lista DS que se utilizará para almacenar los ID de las instancias que colisionan.</td>
      </tr>
      <tr>
        <td>ordenado</td>
        <td>Si la lista debe ser ordenada por distancia<tt>(true</tt>) o no<tt>(false</tt>).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code">Int (El número de instancias que se encuentran en colisión)</p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p class="code">var _list = ds_list_create();<br> var _num = instance_position_list(mouse_x, mouse_y, all, _list, false);<br> if _num &gt; 0<br> {
    <br> for (var i = 0; i &lt; _num; ++i;)<br> {
    <br> instance_destroy(_list[| i]);<br> }
    <br> }
    <br> ds_list_destroy(_list);
  </p>
  <p>El código anterior buscará una colisión con todas las instancias encontradas en la posición del ratón. Éstas se añadirán a una lista DS, que luego se recorrerá para destruir cada una de las instancias en colisión.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Volver: <a href="Instances.htm">Instancias</a></div>
        <div style="float:right">Siguiente: <a href="instance_id_get.htm">instance_id_get</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
instance_position_list
-->
  <!-- TAGS
instance_position_list
-->
</body>
</html>