<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>sprite_save</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function sprite_save" />
  <meta name="rh-index-keywords" content="sprite_save" />
  <meta name="search-keywords" content="sprite_save" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>sprite_save</h1>
  <p>Esta función puede utilizarse para guardar cualquier subimagen de un sprite en el disco, dándole el nombre de archivo especificado. El sprite debe haber sido <a href="sprite_add.htm">añadido</a> en <span class="notranslate">tiempo de ejecución</span> (no se pueden guardar sprites añadidos a través del IDE) y el archivo debe ser guardado
    con una extensión <tt>*.png</tt>.</p>
  <p class="note"><b>NOTA</b>: Dependiendo de la plataforma de destino que se elija, usted está limitado en cuanto a dónde puede guardar y cargar archivos. Consulte la sección <a href="../../../../../Additional_Information/The_File_System.htm">Manejo de archivos</a> para obtener más información.</p>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code">sprite_save(ind, subimg, fname);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descripción</th>
      </tr>
      <tr>
        <td>ind</td>
        <td>El índice del sprite a guardar.</td>
      </tr>
      <tr>
        <td>subimg</td>
        <td>La sub-imagen del sprite a guardar.</td>
      </tr>
      <tr>
        <td>fname</td>
        <td>El nombre de archivo del sprite guardado.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve</h4>
  <p class="code">N/A</p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p class="code">var surf, spr_custom;<br> surf = surface_create(32, 32);<br> surface_set_target(surf);
    <br> draw_clear_alpha(c_black, 0);<br> draw_sprite(spr_Body, 0, 0, 0);<br> draw_sprite(spr_Clothes, 0, 0, 0);<br> draw_sprite(spr_Hair, 0, 0, 0);<br> spr_custom = sprite_create_from_surface(surf, 0, 0, 32, 32, true, true, 16, 16);<br> surface_reset_target();
    <br> surface_free(surf);
    <br> sprite_save(spr_custom, 0, &quot;Player_Custom_Sprite.png&quot;);<br> sprite_delete(spr_Custom);
  </p>
  <p>El código anterior crea una superficie y almacena su índice en la variable local &quot;surf&quot;. A continuación, apunta a esa superficie, la borra y dibuja varios sprites uno encima del otro. Crea un nuevo sprite a partir de la imagen compuesta dibujada en la superficie
    y asigna su índice a la variable local &quot;spr_Custom&quot; antes de liberar la memoria utilizada por la superficie. Finalmente, el sprite resultante se guarda en un archivo y luego se elimina también de la memoria.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="Sprite_Manipulation.htm">Manipulación de sprites</a></div>
        <div style="float:right">Siguiente: <a href="sprite_save_strip.htm">sprite_save_strip</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
sprite_save
-->
  <!-- TAGS
sprite_save
-->
</body>
</html>