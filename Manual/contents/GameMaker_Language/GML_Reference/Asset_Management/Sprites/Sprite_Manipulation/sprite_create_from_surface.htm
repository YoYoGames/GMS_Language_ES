<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>sprite_create_from_surface</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function sprite_create_from_surface" />
  <meta name="rh-index-keywords" content="sprite_create_from_surface" />
  <meta name="search-keywords" content="sprite_create_from_surface" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>sprite_create_from_surface</h1>
  <p>Con esta función puedes crear un sprite a partir de una superficie previamente inicializada (el valor del ID del índice de la superficie se devuelve al crear la superficie usando <a href="../../../Drawing/Surfaces/surface_create.htm"><tt>surface_create()</tt></a>). Las coordenadas x e
    y que introduzcas en la función deben ser relativas a la posición (0,0) de la <i>superficie</i> (la esquina superior izquierda) y no a la ventana del juego (ni a la vista si tienes una activa). Los argumentos de anchura y altura están en píxeles y
    definen la anchura y la altura de la parte de la superficie a utilizar.</p>
  <p>Si se establece el argumento &quot;removeback&quot; a true se eliminará un color del sprite, comprobando el <i>píxel</i> inferior <i>izquierdo</i> del sprite para el color que hay allí y luego usando eso como el color a eliminar.</p>
  <p>Si eliges la opción &quot;removeback&quot;, puede que también quieras <span class="notranslate">que</span> GameMaker <span class="notranslate">Studio 2 suavice</span> los bordes del sprite estableciendo el argumento &quot;smooth&quot; en true. Todo lo que esto hace es crear un borde semi-transparente alrededor de los bordes de
    el sprite después de haber eliminado su fondo.</p>
  <p>Por último, también puedes especificar el <i>origen</i> x e y del sprite. Este es el punto en el que el sprite se &quot;fija&quot; en la instancia que lo utiliza, y siempre se calcula como relativo a la esquina superior izquierda 0,0 de una subimagen del sprite. Por lo tanto,
    por ejemplo, un sprite de 32 x 32 píxeles con estos valores establecidos en (16,16) tendrá su origen en el centro.</p>
  <p>Por defecto, todos los nuevos sprites tienen sus cajas delimitadoras calculadas automáticamente (la caja exacta dependerá del tamaño y la transparencia del sprite), sin embargo, es posible que desee personalizar esto, en cuyo caso también debe utilizar la función <a href="sprite_collision_mask.htm"><tt>sprite_collision_mask()</tt></a>.</p>
  <p class="note"><b>NOTA:</b> Cuando creas un sprite en <span class="notranslate">GameMaker Studio 2</span> con este método debes recordar eliminarlo de nuevo (con <a href="sprite_delete.htm"><tt>sprite_delete()</tt></a>) cuando ya no lo necesite, de lo contrario existe el riesgo de una fuga de memoria que
    ralentizará y eventualmente bloqueará su juego.</p>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code">sprite_create_from_surface(index, x, y, w, h, removeback, smooth, xorig, yorig);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descripción</th>
      </tr>
      <tr>
        <td>índice</td>
        <td>El índice de la superficie a crear.</td>
      </tr>
      <tr>
        <td>x</td>
        <td>La posición x desde la que copiar.</td>
      </tr>
      <tr>
        <td>y</td>
        <td>La posición y desde la que se va a copiar.</td>
      </tr>
      <tr>
        <td>w</td>
        <td>La anchura del área a copiar (desde la posición x).</td>
      </tr>
      <tr>
        <td>h</td>
        <td>La altura del área a copiar (desde la posición y).</td>
      </tr>
      <tr>
        <td>quitar la espalda</td>
        <td>Indica si se deben hacer transparentes todos los píxeles con el color de fondo (píxel inferior izquierdo).</td>
      </tr>
      <tr>
        <td>suave</td>
        <td>Indica si se deben suavizar los bordes.</td>
      </tr>
      <tr>
        <td>xorig</td>
        <td>Indica la posición x del origen en el sprite.</td>
      </tr>
      <tr>
        <td>yorig</td>
        <td>Indica la posición y del origen en el sprite.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve</h4>
  <p class="code">Real (valor único de identificación del sprite)</p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p class="code">var surf;<br> surf = surface_create(32, 32);<br> surface_set_target(surf);
    <br> draw_clear_alpha(c_black, 0);<br> draw_sprite(spr_Body, 0, 0, 0);<br> draw_sprite(spr_Clothes, 0, 0, 0);<br> draw_sprite(spr_Hair, 0, 0, 0);<br> spr_custom = sprite_create_from_surface(surf, 0, 0, 32, 32, true, true, 16, 16);<br> surface_reset_target();
    <br> surface_free(surf);
  </p>
  <p>El código anterior crea una superficie y almacena su índice en la variable local &quot;surf&quot;. A continuación, apunta a esa superficie, la borra y dibuja varios sprites uno encima del otro. Por último, crea un nuevo sprite a partir de la imagen compuesta dibujada en la superficie
    y asigna su índice a &quot;spr_Custom&quot; antes de liberar la memoria utilizada por la superficie.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="Sprite_Manipulation.htm">Manipulación de sprites</a></div>
        <div style="float:right">Siguiente: <a href="sprite_add_from_surface.htm">sprite_add_from_surface</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
sprite_create_from_surface
-->
  <!-- TAGS
sprite_create_from_surface
-->
</body>
</html>