<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>skeleton_get_bounds</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function skeleton_get_bounds" />
  <meta name="rh-index-keywords" content="skeleton_get_bounds" />
  <meta name="search-keywords" content="skeleton_get_bounds" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>skeleton_get_bounds</h1>
  <p>Esta función devolverá una matriz de valores asociados con cualquier cuadro delimitador para el sprite de animación del esqueleto actualmente asignado. Se proporciona el número de índice del cuadro delimitador para obtener los detalles (se puede recuperar el número total de cuadros delimitadores para el sprite utilizando la función
    para el sprite utilizando la función <a href="skeleton_get_num_bounds.htm"><tt>skeleton_get_num_bounds()</tt></a>) y la función devolverá un array con los siguientes elementos:</p>
  <ul class="colour">
    <li>0] - el número de puntos de la caja delimitadora (un real)</li>
    <li>1] - el nombre del cuadro delimitador (una cadena)</li>
    <li>2] - la posición x del primer punto</li>
    <li>[3] - la posición y del primer punto</li>
    <li>etc...] - más datos de posición x/y hasta el número de puntos del cuadro delimitador</li>
  </ul>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code">skeleton_get_bounds(index);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descripción</th>
      </tr>
      <tr>
        <td>índice</td>
        <td>El índice de la caja delimitadora para obtener los valores.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code">Array (mínimo 2 elementos: numPoints, name [, xPos, yPos, etc...])</p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p> </p>
  <p class="code">var num = skeleton_get_num_bounds();<br> var yy = 60;<br> for(var i = 0; i &lt; num; i++;)<br> {
    <br> var b_info = skeleton_get_bounds(i);<br> if b_info[0] &gt; 0<br> {
    <br> var data = b_info[1] + &quot;:&quot;;<br> for(var j = 0; j &lt; b_info[0]; j++;)<br> {
    <br> data += &quot; (&quot; + string(b_info[(j * 2) + 2]) + &quot;, &quot; + string(b_info[(j * 2) + 2 + 1]) + &quot;)&quot;;<br> }
    <br> draw_text(20, yy, data);<br> yy += 20;<br> }
    <br> }
  </p>
  <p>El código anterior hará un bucle a través de cada uno de los cuadros delimitadores asociados con el sprite actualmente asignado y luego dibujará esos datos como una cadena en la pantalla.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="Drawing_And_Miscellaneous.htm">Dibujo y Varios</a></div>
        <div style="float:right">Siguiente: <a href="skeleton_collision_draw_set.htm">skeleton_collision_draw_set</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
skeleton_get_bounds
-->
  <!-- TAGS
skeleton_get_bounds
-->
</body>
</html>