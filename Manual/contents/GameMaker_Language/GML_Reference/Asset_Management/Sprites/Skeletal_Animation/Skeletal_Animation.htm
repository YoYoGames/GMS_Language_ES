<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Animación esquelética</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the different Skeletal Animation functions" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Skeletal Animation,gm_SpineTintBlackColour,tint black,Spine" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Sprites de animación esquelética</h1>
  <p>Las funciones que se encuentran en esta sección son <i>sólo</i> para usar con sprites que han sido importados desde un archivo de animación esquelética (específicamente, los archivos JSON que <a href="http://es.esotericsoftware.com/"><b>Sprites</b></a> exporta)
    y pueden ser usadas para obtener información sobre un activo de animación en tu juego, así como para establecer ciertas propiedades dentro de una animación. Estas funciones pueden ser utilizadas junto con las funciones y variables regulares de los sprites, permitiéndote (por ejemplo)
    mezclar dos animaciones de esqueleto usando estas funciones especiales mientras se establece la escala de la imagen usando las variables normales de instancia de sprite (para más información sobre las variables de instancia de sprite ver <a href="../Sprite_Instance_Variables/Sprite_Instance_Variables.htm">aquí</a>).</p>
  <p class="note"><b>NOTA</b>: Para más información sobre la importación de sprites de animación esquelética hechos con Spine, por favor, consulte la sección <a href="../../../../../Settings/Texture_Information/Non-Bitmap_Sprites.htm">Importación de sprites sin mapa de bits</a>.</p>
  <p>Puedes encontrar más información sobre las funciones de estos tipos de sprites en las secciones siguientes:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="Animation/Animation.htm"><label for="a">Animación</label></a></li>
    <li><a href="Skins/Skins.htm"><label for="b">Pieles</label></a></li>
    <li><a href="Attachments/Attachments.htm"><label for="c">Archivos adjuntos</label></a></li>
    <li><a href="Bones/Bones.htm"><label for="d">Huesos</label></a></li>
    <li><a href="Slots/Slots.htm"><label for="f">Ranuras</label></a></li>
    <li><a href="Drawing_And_Miscellaneous/Drawing_And_Miscellaneous.htm"><label for="e">Dibujo y otros</label></a></li>
  </ul>
  <p> </p>
  <p> </p>
  <h2>Soporte Tintado Negro</h2>
  <p>Esta característica permite que las áreas oscuras de las ranuras de spines se tiñan de forma diferente a las áreas claras (esta es una característica de Spine IDE, ver la sección <b>Tint black</b> <a href="http://esotericsoftware.com/spine-attachments" target="_blank">aquí</a> más detalles). Actualmente, para hacer uso de esta característica en <span class="notranslate">GameMaker Studio 2</span>, se requiere el uso de un shader personalizado <a href="../../../../../The_Asset_Editors/Shaders.htm"><span class="notranslate">shader</span></a> cuando
    dibujar un sprite Spine que lo utiliza. Este <span class="notranslate">shader</span> contiene una variable global uniforme llamada &quot; gm_SpineTintBlackColour<tt>&quot;</tt> que el ejecutor rellena con el color actual del tint-negro, recuperado de los datos del Spine automáticamente. El <span class="notranslate">shader</span>
    requerido se muestra a continuación:</p>
  <p>El <span class="notranslate">sombreador</span> de vértices (es el mismo que el <span class="notranslate">sombreador de</span> vértices de paso por defecto)</p>
  <p class="code">attribute vec3 in_Position; // (x,y,z)<br> attribute vec4 in_Colour; // (r,g,b,a)<br> attribute vec2 in_TextureCoord; // (u,v)<br>
    <br> varying vec2 v_vTexcoord;<br> varying vec4 v_vColour;<br>
    <br> void main()<br> {
    <br> vec4 object_space_pos = vec4( in_Position.x, in_Position.y, in_Position.z, 1.0);<br> gl_Position = gm_Matrices[MATRIX_WORLD_VIEW_PROJECTION] * object_space_pos;<br> v_vColour = in_Colour;<br> v_vTexcoord = in_TextureCoord;<br> }
  </p>
  <p>El <span class="notranslate">sombreador de</span> fragmentos:</p>
  <p class="code">varying vec2 v_vTexcoord;<br> varying vec4 v_vColour;<br>
    <br> uniform vec4 gm_SpineTintBlackColour; // Este es el uniforme que contiene el color tintado-negro<br>
    <br> void main()<br> {
    <br> vec4 tb = gm_SpineTintBlackColour;<br> vec4 texcol = texture2D( gm_BaseTexture, v_vTexcoord );<br> vec4 outcol;<br> outcol.rgb = v_vColour.rgb * texcol.rgb;<br> outcol.rgb += tb.rgb * ((tb.a * (texcol.a - 1.0)) + (1.0 - texcol.rgb)); //
    Esta línea realiza la lógica de mezcla de negro y tinte<br> outcol.a = v_vColour.a * texcol.a;<br> gl_FragColor = outcol;<br> }
  </p>
  <p>Para ello, primero hay que llamar al <span class="notranslate">sombreador</span>, luego dibujar el sprite y después reiniciar el <span class="notranslate">sombreador</span>, algo así:</p>
  <p class="code"><span class="notranslate">shader_set</span>(shd_spine_tint_black);<br> draw_self();
    <br> <span class="notranslate">shader_reset</span>();
  </p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="../Sprites.htm">Sprites</a></div>
        <div style="float:right">Siguiente: <a href="../Sprite_Information/Sprite_Information.htm"><label for="three">Información sobre Sprite</label></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
Spine Sprites
Spine
Skeleton Animation Sprites
gm_SpineTintBlackColour
tint black
-->
  <!-- TAGS
sprite_spìne_functions
-->
</body>
</html>