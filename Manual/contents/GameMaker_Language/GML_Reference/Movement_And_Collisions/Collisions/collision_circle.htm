<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>círculo_de_colisión</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that gives an overview of the funtion collision_circle" />
  <meta name="rh-index-keywords" content="collision_circle" />
  <meta name="search-keywords" content="collision_circle" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>círculo_de_colisión</h1>
  <p><span class="inline">Collision_circle</span> crea una zona circular del radio dado por el usuario alrededor de los puntos x1,y1 y luego comprueba esa zona para una colisión con <b>cualquier</b> instancia del objeto especificado por el argumento &quot;obj&quot;.
    Esta comprobación puede ser precisa o no, pero para que las colisiones precisas estén activadas, el objeto o la instancia que se está comprobando <i>debe</i> tener también activadas las colisiones precisas para su sprite. Si no es así, la comprobación por defecto se basa en los cuadros delimitadores.
    La siguiente imagen ilustra cómo funciona esto:</p>
  <p><img alt="Collision circle example" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/collision_circle_illustration.png">Aquí, la instancia en el centro está utilizando un círculo de colisión para comprobar si hay objetos bola
    objetos. Ahora, los azules <i>no</i> tienen una caja delimitadora precisa y, como puedes ver, incluso si el sprite no está tocando el círculo, la colisión puede ocurrir (incluso si estableces la opción precisa en la función a true) ya que la caja delimitadora de ese sprite sobrepasa el área circular definida por collision_circle.
    de ese sprite sobrepasa el área circular definida por collision_circle. Por otro lado, las bolas verdes sólo se considerarán en colisión si el sprite real se sobrepone al círculo definido. Recuerda que para que se consideren colisiones precisas
   <i>tanto</i> el sprite del objeto como la función de colisión deben tener marcada la precisión como activada. También hay que tener en cuenta que el valor de retorno de la función puede ser el id de <i>cualquiera</i> de las instancias consideradas en colisión.</p>
  <p>Tenga en cuenta que en lugar de un índice de objeto puede proporcionar una instancia <a href="../../Asset_Management/Instances/Instance_Variables/id.htm"><tt>id</tt></a> para buscar una instancia específica, o las <a href="../../../GML_Overview/Instance_Keywords.htm">palabras clave de instancia</a> <span class="inline">all</span>, o <span class="inline">other</span> (dependiendo del evento y del ámbito del código actual).</p>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code">collision_circle(x1, y1, rad, obj, prec, notme);</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descripción</th>
      </tr>
      <tr>
        <td>x1</td>
        <td>La coordenada x del centro del círculo a comprobar.</td>
      </tr>
      <tr>
        <td>y1</td>
        <td>La coordenada y del centro del círculo a comprobar.</td>
      </tr>
      <tr>
        <td>rad</td>
        <td>El radio (distancia en píxeles desde su centro hasta su borde).</td>
      </tr>
      <tr>
        <td>obj</td>
        <td>El objeto para comprobar las colisiones de instancia.</td>
      </tr>
      <tr>
        <td>prec</td>
        <td>Si la comprobación se basa en colisiones de píxeles (verdadero = lento) o en su caja delimitadora en general (falso = rápido).</td>
      </tr>
      <tr>
        <td>notme</td>
        <td>Si la instancia que llama, si es relevante, debe ser excluida<tt>(true</tt>) o no<tt>(false</tt>).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code">Id. de instancia o no</p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p class="code">if collision_circle(x, y, 20, obj_Cursor, false, true)<br> {
    <br> image_index = 1;<br> }
    <br> else image_index = 0;</p>
  <p>El código anterior comprobará un área circular con un radio de 20 píxeles en busca de una colisión con &quot;obj_Cursor&quot; y si la hay pondrá el image_index del objeto que ejecuta el código a 1, pero si no la hay pondrá el image_index del objeto
    a 0.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="Collisions.htm">Colisiones</a></div>
        <div style="float:right">Siguiente: <a href="collision_circle_list.htm">collision_circle_list</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
collision_circle
-->
  <!-- TAGS
collision_circle
-->
</body>
</html>