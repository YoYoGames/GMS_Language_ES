<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>mp_potencial_paso</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="This page outlines the function mp_potential_step" />
  <meta name="rh-index-keywords" content="mp_potential_step" />
  <meta name="search-keywords" content="mp_potential_step" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>mp_potencial_paso</h1>
  <p>Esta función permite a la instancia dar un paso hacia una posición particular definida por xgoal/ygoal, mientras intenta evitar los obstáculos. Cuando la instancia se encuentre con una instancia sólida (o cualquier instancia cuando checkall sea verdadero) cambiará la dirección
    de movimiento para tratar de evitar esa instancia y moverse alrededor de ella. No se garantiza que este enfoque funcione, pero en la mayoría de los casos fáciles hará que la instancia se mueva efectivamente hacia la meta. La función devuelve si el objetivo fue alcanzado o no.</p>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code">mp_potencial_paso(xobjetivo, yobjetivo, tamaño del paso, checkall)</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descripción</th>
      </tr>
      <tr>
        <td>xgoal</td>
        <td>La posición x del objetivo.</td>
      </tr>
      <tr>
        <td>ygoal</td>
        <td>La posición y del objetivo.</td>
      </tr>
      <tr>
        <td>tamaño del paso</td>
        <td>La velocidad a la que se mueve la instancia en píxeles por paso.</td>
      </tr>
      <tr>
        <td>comprobar todo</td>
        <td>Si se comprueban todas las instancias (true) o sólo las sólidas (false).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code">Booleano</p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p class="code">if instance_exists(obj_Enemy)<br> {
    <br> var inst;<br> inst = instance_nearest(x, y, obj_Enemy);<br> mp_potential_step(inst.x, inst.y, 5, false);<br> }
  </p>
  <p>El código anterior primero comprueba si hay alguna instancia de &quot;obj_Enemigo&quot; en la sala. Si la hay, encuentra la más cercana y almacena su id en una variable. Esta variable se utiliza entonces para decirle a <tt>mp_potential_step</tt> que mueva la
    que mueva la instancia con el código hacia la posición x/y del objeto encontrado a una velocidad de 5 píxeles por paso, evitando sólo las instancias marcadas como sólidas.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="Motion_Planning.htm">Planificación del movimiento</a></div>
        <div style="float:right">Siguiente: <a href="mp_potential_step_object.htm">mp_potential_step_object</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
mp_potential_step
-->
  <!-- TAGS
mp_potential_step
-->
</body>
</html>