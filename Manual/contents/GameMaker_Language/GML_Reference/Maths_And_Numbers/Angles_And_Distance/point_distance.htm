<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>



  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>punto_distancia</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for point_distance" />
  <meta name="rh-index-keywords" content="point_distance" />
  <meta name="search-keywords" content="point_distance" />
</head>

<body>




  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>punto_distancia</h1>
  <p>Esta función devuelve la longitud de un vector formado por los componentes especificados [x1,y1] y [x2,y2]. Por ejemplo, en la imagen de abajo si queremos obtener la distancia entre la posición de la nave del jugador y la posición del enemigo para poder calcular si el
    enemigo está lo suficientemente cerca como para dispararle, entonces usaríamos esta función (el código exacto está en el ejemplo debajo de la imagen):</p>
  <p><img alt="Point distance example" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Maths/point_distance.png" /></p>
  <p> </p>
  <h4><b>Sintaxis:</b></h4>
  <p class="code">punto_distancia(x1, y1, x2, y2);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descripción</th>
      </tr>
      <tr>
        <td>x1</td>
        <td>La coordenada x del primer componente del vector</td>
      </tr>
      <tr>
        <td>y1</td>
        <td>La coordenada y del primer componente del vector</td>
      </tr>
      <tr>
        <td>x2</td>
        <td>La coordenada x del segundo componente del vector</td>
      </tr>
      <tr>
        <td>y2</td>
        <td>La coordenada y del segundo componente del vector</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p class="code">var ex, ey;<br> ex = instance_nearest(x, y, enemy).x;<br> ey = instance_nearest(x, y, enemy).y;<br> if (point_distance(x, y, ex, ey) &lt; 200)<br> {
    <br> instance_create_layer(x, y, &quot;Bullets&quot;, obj_Missile)<br> }
  </p>
  <p>El código anterior obtendrá las coordenadas x e y del enemigo más cercano y luego las utilizará para comprobar la distancia (longitud) del vector formado por ellas y las coordenadas del jugador. Si el valor es inferior a 200, el objeto jugador creará una instancia de
    &quot;obj_Misil&quot;.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="Angles_And_Distance.htm">Ángulos y distancia</a></div>
        <div style="float:right">Siguiente: <a href="point_distance_3d.htm">punto_distancia_3d</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
point_distance
-->
  <!-- TAGS
point_distance
-->

</body></html>