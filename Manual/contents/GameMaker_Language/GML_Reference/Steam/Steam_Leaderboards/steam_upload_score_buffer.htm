<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>steam_upload_score_buffer</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for steam_upload_score_buffer" />
  <meta name="rh-index-keywords" content="steam_upload_score_buffer" />
  <meta name="search-keywords" content="steam_upload_score_buffer" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span class="notranslate">steam_upload_score_buffer</span></h1>
  <p>Esta función enviará una puntuación a la tabla de clasificación dada junto con un paquete de datos creado a partir de un búfer. El búfer no debe tener más de 256 bytes de tamaño - cualquier cosa más allá de eso será cortada - y puede contener cualquier dato que usted requiera. La puntuación
    que se va a cargar debe ser un número real, y el nombre de la tabla de clasificación es una cadena que se definió cuando se creó la tabla de clasificación utilizando la función <a href="steam_create_leaderboard.htm"><tt><span class="notranslate">steam_create_leaderboard</span>()</tt></a>.</p>
  <p>Si la función falla, devolverá un valor de -1, mientras que una publicación exitosa devolverá un ID único para la carga y activará un evento asíncrono <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Steam.htm"><span class="notranslate">de Steam</span></a>. Este evento
    creará un <tt>Mapa DS</tt> en la variable incorporada <tt>async_load</tt> con los siguientes pares clave/valor:</p>
  <ul class="colour">
    <li>&quot; event_type<b>&quot; -</b> Esta clave tendrá el valor &quot;leaderboard_upload<b>&quot; cuando sea activada</b> por esta función</li>
    <li>&quot; lb_name<b>&quot; -</b> Esta clave contiene el nombre de la tabla de clasificación que se publicó en</li>
    <li>&quot;<b>éxito&quot; -</b> Será 1 si el envío tuvo éxito, 0 falló</li>
    <li>&quot;<b>actualizado&quot; -</b> Será 1 si la puntuación de la tabla de clasificación fue realmente actualizada (es decir, la nueva puntuación fue mejor) o 0 en caso contrario. Ten en cuenta que si la puntuación se actualiza, tampoco se añadirán los datos del buffer cargado.</li>
    <li>&quot; post_id<b>&quot; -</b> Esta clave debe coincidir con el valor del ID devuelto por la llamada de carga</li>
    <li>&quot; puntuación<b>&quot; -</b> Esta tecla contiene la puntuación que se ha contabilizado</li>
  </ul>
  <p>Tenga en cuenta que al descargar la tabla de posiciones, la clave &quot;entries&quot; del <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><tt>async_load</tt></a> mapa tendrá ahora una clave &quot;data&quot; para poder recuperar el
    búfer de datos cargado (ver el ejemplo de código extendido de <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Steam.htm"><span class="notranslate">Steam</span></a> Event para más detalles). Este búfer de datos estará <b>codificado en Base 64</b>, por lo que tendrás que utilizar
    la función <a href="../../Buffers/buffer_base64_decode.htm"><tt>buffer_base64_decode()</tt></a> en los datos antes de leer del buffer.</p>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code"><span class="notranslate">steam_upload_score_buffer</span>(lb_name, score, buffer);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descripción</th>
      </tr>
      <tr>
        <td>lb_nombre</td>
        <td>El nombre de la tabla de clasificación a la que se suben las puntuaciones (una cadena).</td>
      </tr>
      <tr>
        <td>puntuación</td>
        <td>La puntuación a subir (un número real).</td>
      </tr>
      <tr>
        <td>buffer</td>
        <td>El ID de la memoria intermedia a adjuntar.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Ejemplo ampliado:</h4>
  <p>En este ejemplo, primero subimos una puntuación y luego analizamos el mapa <tt>async_load</tt> devuelto si tiene éxito. El código siguiente muestra un ejemplo típico de carga, con un búfer que se crea para mantener una cadena que nos indica el nivel en el que se ha cargado la puntuación
    de:</p>
  <p class="code">si (hp &lt;= 0)<br> {
    <br> var buff = buffer_create(256, buffer_fixed, 1 );<br> buffer_write(buff, buffer_string, &quot;Uploaded on level &quot; + string(global.Level));<br> upload_ID = steam_upload_score(&quot;Game Scores&quot;, score, buff);<br> if
    (!upload_ID)<br> {
    <br> alarm[0] = room_speed;<br> }
    <br> buffer_delete(buff);
    <br> }
  </p>
  <p>Tenga en cuenta que hemos establecido una alarma si la llamada falla. Esto se utilizaría para intentar la subida de nuevo en un momento posterior y se puede añadir código extra allí para volver a intentar la subida o para guardar la puntuación en un archivo de texto si sigue fallando, etc. Tenga en cuenta también que
    borramos inmediatamente el buffer, ya que no es necesario para la función. Ahora añadimos lo siguiente en el <b>evento async</b> de <b><span class="notranslate">Steam</span></b> para la instancia que controla las puntuaciones:</p>
  <p class="code">var type = ds_map_find_value(async_load, &quot;event_type&quot;);<br> if (type == &quot;leaderboard_upload&quot;)<br> {
    <br> var lb_ID = ds_map_find_value(async_load, &quot;post_id&quot;);<br> if lb_ID == upload_ID<br> {
    <br> var lb_name = ds_map_find_value(async_load, &quot;lb_name&quot;);<br> var lb_done = ds_map_find_value(async_load, &quot;success&quot;);<br> var lb_score = ds_map_find_value(async_load, &quot;score&quot;);<br> var
    lb_updated = ds_map_find_value(async_load, &quot;updated&quot;);<br> show_debug_message(&quot;leaderboard post id:&quot; + string(lb_ID) + &quot; to lb:&quot; + string(lb_name) + &quot; with score:&quot; + string(lb_score) + &quot; updated=&quot;
    + string(lb_updated));<br> if (lb_done)<br> {
    <br> show_debug_message(&quot;- Exitoso&quot;);<br> }
    <br> else
    <br> {
    <br> show_debug_message(&quot;- Falló&quot;);<br> }
    <br> }
    <br> }
  </p>
  <p>En el ejemplo estamos simplemente emitiendo los valores de retorno a la ventana del compilador como mensajes de depuración, pero puedes usar este evento para tratar la información de la manera que quieras.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="Steam_Leaderboards.htm">Tablas de clasificación</a></div>
        <div style="float:right">Siguiente: <a href="steam_download_scores.htm"><span class="notranslate">steam_download_scores</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
<span class="notranslate">steam</span>_upload_score_buffer
-->
  <!-- TAGS
<span class="notranslate">steam</span>_upload_score_buffer
-->
</body>
</html>