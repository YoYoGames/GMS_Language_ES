<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>http_get_file</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for http_get_file" />
  <meta name="rh-index-keywords" content="http_get_file" />
  <meta name="search-keywords" content="http_get_file" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>http_get_file</h1>
  <p>Con esta función, puede conectarse a la URL especificada para recuperar información en forma de archivo. Como se trata de una función asíncrona, <span class="notranslate">GameMaker Studio 2</span> no se bloqueará a la espera de una respuesta, sino que seguirá funcionando a menos que obtenga
    información de devolución de llamada. Esta información estará en forma de cadena y activará un <b>Evento Asíncrono</b> en cualquier instancia que tenga uno definido en sus propiedades de objeto.</p>
  <p class="note"><b>NOTA: </b>Debe tener en cuenta que, debido a la protección XSS de los navegadores, las solicitudes e intentos de carga de recursos de dominios cruzados se bloquean y pueden aparecer resultados en blanco. Para más información, consulte la sección sobre <a href="HTTP.htm">problemas</a> entre dominios.</p>
  <p>Este evento generará un &quot;call back&quot; que es recogido por cualquier evento HTTP <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/HTTP.htm">, en</a> cuyo caso se generará un <a href="../../Data_Structures/DS_Maps/DS_Maps.htm"><tt>Mapa DS</tt></a>    (más conocido como &quot;diccionario&quot;) que es exclusivo de este evento y se almacena en la variable especial <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><b>async_load</b></a>. Este mapa DS contendrá
    diferentes valores en función de los datos que se devuelvan, es decir, el evento se disparará varias veces a medida que se reciba cada paquete de datos para poder mostrar una barra de progreso, por ejemplo. La estructura general del mapa DS será la siguiente:</p>
  <ul class="colour">
    <li><b>id: </b>El ID que fue devuelto por el comando. Si lanza una serie de peticiones <tt>http_</tt> entonces necesita saber cuál es la que está recibiendo la respuesta, por lo que usaría este valor para compararlo con el valor que almacenó cuando originalmente
      originalmente la solicitud para encontrar la correcta.</li>
    <li><b>estado: </b>Devuelve un valor inferior a 0 si se trata de un error, 0 si está completo y 1 si está recibiendo paquetes (ver más abajo para más detalles).</li>
    <li><b>resultado: </b>Los datos recibidos (sólo cadena).</li>
    <li><b>url: </b>La URL completa que ha solicitado.</li>
    <li><b>http_status: </b>El código de estado http en bruto (si está disponible). Esto devuelve el código de estado web estándar para la mayoría de los navegadores, por ejemplo: 304 para &quot;No Modificado&quot; o 204 para &quot;Sin Contenido&quot;, etc...</li>
  </ul>
  <p>Si hay varios paquetes que se devuelven a su juego, la clave de devolución de llamada &quot;estado&quot; devolverá 1, en cuyo caso el mapa DS tendrá las siguientes claves adicionales:</p>
  <ul class="colour">
    <li><b>&quot;contentLength&quot;: </b>Es el tamaño del archivo que el servidor web ha dicho que debe esperar recibir (puede ser -1 si el servidor no devuelve este dato).</li>
    <li><b>&quot;sizeDownloaded&quot;: </b>El tamaño de los datos que ya se han descargado.</li>
  </ul>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code">http_get_file(url, local_target);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descripción</th>
      </tr>
      <tr>
        <td>url</td>
        <td>La dirección web del servidor del que desea obtener el archivo</td>
      </tr>
      <tr>
        <td>objetivo_local</td>
        <td>La ruta de almacenamiento local para guardar el archivo</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Ejemplo ampliado:</h4>
  <p>La función <tt>http_get_file(</tt> ) puede ser llamada desde cualquier evento, y como es asíncrona la llamada de retorno puede ser casi instantánea o puede tardar varios segundos. La llamada a la función es sencilla y sería algo así:</p>
  <p class="code">archivo = http_get_file(&quot;http://www.macsweeneygames.com/downloads/upgrade.zip&quot;, &quot;\Downloads\Upgrade.zip&quot;);</p>
  <p>El código anterior solicitará un archivo de la URL dada y lo establecerá para ser descargado en el área de almacenamiento local (como se especifica en las Opciones de Juego HTML5) , en un directorio &quot;Descargas&quot; con el nombre de archivo dado (esto no tiene que ser el mismo que
    el nombre del archivo fuente, pero debe utilizar la misma extensión de archivo). El índice del mapa <tt>async_load</tt> se almacenará en la variable &quot;file&quot; para que pueda comprobar la devolución de llamada correcta en el evento asíncrono, y si el directorio de guardado no
    existe, se creará. El Evento Asíncrono disparado sería el sub-evento <b>HTTP</b>, y en ese evento tendrías algo como lo siguiente:</p>
  <p class="code">if ds_map_find_value(async_load, &quot;id&quot;) == file<br> {
    <br> var status = ds_map_find_value(async_load, &quot;status&quot;);<br> if status == 0<br> {
    <br> var path = ds_map_find_value(async_load, &quot;result&quot;);<br> var files = zip_unzip(path, &quot;/NewContent/&quot;);<br> if files &gt; 0<br> {
    <br> global.ExtraContent = true;<br> }
    <br> }
    <br> }
  </p>
  <p>El código anterior comprobará primero el &quot;id&quot; del ds_map que se ha creado, y luego comprobará el estado de la llamada de retorno. Si el valor es igual a 0 (señalando el éxito), el resultado de la llamada de retorno se utilizará junto con la función <a href="../../File_Handling/Encoding_And_Hashing/zip_unzip.htm"><tt>zip_unzip()</tt></a>    para descomprimir el archivo descargado en el directorio indicado. Si la descompresión tiene éxito, se establece una variable global a true.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Volver: <a href="HTTP.htm">HTTP</a></div>
        <div style="float:right">Siguiente: <a href="http_post_string.htm">http_post_string</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
http_get_file
-->
  <!-- TAGS
http_get_file
-->
</body>
</html>