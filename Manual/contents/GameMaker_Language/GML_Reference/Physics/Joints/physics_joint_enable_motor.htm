<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_joint_enable_motor</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_joint_enable_motor" />
  <meta name="rh-index-keywords" content="physics_joint_enable_motor" />
  <meta name="search-keywords" content="physics_joint_enable_motor" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physics_joint_enable_motor</h1>
  <p>Cuando tienes una articulación con un motor<a href="physics_joint_prismatic_create.htm">(prismático</a> o <a href="physics_joint_revolute_create.htm">revolucionado</a>), es posible que quieras poder encender o apagar el motor dependiendo de las variables y condiciones
    dentro del juego. Para esto, necesitas haber almacenado el índice de la articulación previamente en una variable y luego puedes encender o apagar el motor usando esta función y estableciendo el argumento &quot;motor&quot; como verdadero o <tt>falso.</tt> </p>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code">physics_joint_enable_motor(joint, motor)</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descripción</th>
      </tr>
      <tr>
        <td>conjunta</td>
        <td>La articulación en la que desea activar o desactivar el motor</td>
      </tr>
      <tr>
        <td>motor</td>
        <td>Si desea encender el motor (verdadero) o apagarlo (falso)</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code">N/A</p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p class="code">var t_fix = physics_fixture_create();<br> physics_fixture_set_circle_shape(t_fix, sprite_get_width(sprite_index) / 2);<br> var o_id=instance_create_layer(x+300, y, &quot;Instances&quot;, obj_Door);<br> physics_fixture_bind(t_fix, id);<br> physics_fixture_bind(t_fix,
    o_id);<br> perma_joint = physics_joint_revolute_create(id, o_id, x+25, y, -90, 90, 1, 10, 2, 0, 0);<br> physics_joint_enable(perma_joint, 1);<br> physics_fixture_delete(t_fix);
  </p>
  <p>El código anterior crea y define un nuevo fixture y luego crea una instancia de &quot;obj_Door&quot;, vinculando el fixture creado a las dos instancias. A continuación, se unen mediante una junta revolutiva sin motor y con los ángulos limitados a una oscilación de +/- 90 grados, y se almacena el índice de la junta en la variable "perma_Door".
    y almacenamos el índice de la junta en la variable &quot;perma_joint&quot;. A continuación, encendemos el motor utilizando esta variable, antes de borrar finalmente la articulación de la memoria, ya que no es necesaria.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="Joints.htm">Articulaciones</a></div>
        <div style="float:right">Siguiente: <a href="physics_joint_get_value.htm">physics_joint_get_value</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
physics_joint_enable_motor
-->
  <!-- TAGS
physics_joint_enable_motor
-->
</body>
</html>