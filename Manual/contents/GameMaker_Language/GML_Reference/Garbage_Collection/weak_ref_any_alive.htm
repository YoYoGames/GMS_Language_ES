<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>weak_ref_any_alive</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for weak_ref_any_alive" />
  <meta name="rh-index-keywords" content="weak_ref_any_alive" />
  <meta name="search-keywords" content="weak_ref_any_alive" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>weak_ref_create</h1>
  <p>Con esta función puedes comprobar las <a class="glossterm" data-glossterm="referencia débil" href="#">referencias</a> débiles a varios structs para ver si siguen &quot;vivos&quot; o no. Se suministra un array de referencias débiles a comprobar (cada referencia débil
    debe haber sido creada con la función <a href="weak_ref_create.htm"><span class="inline">weak_ref_create()</span></a>), y la función devolverá <span class="inline">true</span> si <em><strong>cualquier </strong></em>de los structs todavía están
    referenciados en alguna parte o <span class="inline">false</span> si no lo están y han sido recolectados por la basura. Tenga en cuenta que si proporciona un array en el que alguno de los valores no es una referencia débil, la función devolverá <span class="inline">undefined</span>.</p>
  <p>Tenga en cuenta que la función también toma dos argumentos opcionales, donde el primero le permite suministrar un índice inicial en la matriz para comprobar desde, así como un argumento para establecer el número de posiciones (longitud) desde ese índice para comprobar. Sólo se comprobarán los índices de la matriz
    dentro de esos parámetros serán comprobados.</p>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code">weak_ref_any_alive(weak_ref, [index], [length]);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Descripción</th>
      </tr>
      <tr>
        <td>weak_ref</td>
        <td>La referencia débil a la estructura que desea comprobar.</td>
      </tr>
      <tr>
        <td>[índice]</td>
        <td>OPCIONAL! El índice de la matriz desde el que se inicia la comprobación</td>
      </tr>
      <tr>
        <td>[longitud]</td>
        <td>OPCIONAL! El número de posiciones desde el índice dado a comprobar</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code">Booleano (o indefinido)</p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p class="code">if weak_ref_any_alive(inventory_ref_array)<br> {<br> instance_destroy(obj_Inventory_Control);<br> }</p>
  <p>El código anterior comprueba un array de referencias débiles y si alguna sigue viva se destruye una instancia.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="Garbage_Collection.htm">Recogida de basura</a></div>
        <div style="float:right">Siguiente: <a href="gc_collect.htm">gc_collect</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
weak_ref_any_alive
-->
  <!-- TAGS
weak_ref_any_alive
-->

</body></html>