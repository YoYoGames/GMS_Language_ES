<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>salir</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the exit function" />
  <meta name="rh-index-keywords" content="exit" />
  <meta name="search-keywords" content="exit" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>salir</h1>
  <p>La sentencia <tt>exit</tt> tiene la siguiente sintaxis:</p>
  <p class="code">salida;</p>
  <p><tt>exit</tt> simplemente termina la ejecución de la <a href="../Script_Functions.htm">función</a>, <a href="../Method_Variables.htm">método</a> o <a href="../../../The_Asset_Editors/Object_Properties/Object_Events.htm">evento</a> del <a href="../Script_Functions.htm">script</a> actual. Tenga en cuenta que
    hay una ligera diferencia en el uso aquí dependiendo del ámbito:</p>
  <ul class="colour">
    <li>Si usas <tt>exit</tt> en una función o método de un script, simplemente saldrá de la función y volverá al código que llamó a la función.</li>
    <li>Si usas <tt>exit</tt> en un bloque de código dentro de un evento de un objeto, saldrá <i>todo el</i> evento incluso si hay varios bloques de código separados después de llamar a <span class="inline">exit</span>.</li>
    <li>Si usas <tt>exit</tt> en un evento padre y llamas a ese evento usando <a href="../../GML_Reference/Asset_Management/Objects/Object_Events/event_inherited.htm"><tt>event_inherited()</tt></a> en un objeto hijo, sólo el evento padre saldrá y el evento
      evento hijo (que llamó a <tt>event_inherited())</tt> continuará.</li>
  </ul>
  <p>Cuando se utiliza en un evento, <tt>la salida</tt> se usa típicamente para evitar que una instancia ejecute más código cuando una condición específica se ha cumplido (o no). El código que se muestra a continuación es un ejemplo de cómo podría utilizarse, en este caso dentro de un evento de colisión,
    aunque se puede utilizar en cualquier evento.</p>
  <p class="code">if (!visible)<br> {
    <br> exit;
    <br> }
    <br>
    <br> otro.hp -= ataque;<br> otro.monedas -= 4;<br> monedas += 4;</p>
  <p>El código anterior comprueba si la instancia actual no es visible, en ese caso sale del bloque de código, en caso contrario sigue adelante y ejecuta el resto del código.</p>
  <p class="note"><b>NOTA</b>: No termina la ejecución del juego. Para ello es necesario utilizar la función <span style="font-size:1px;"><a href="../../GML_Reference/General_Game_Control/game_end.htm"><tt style="font-size: 14px">game_end()</tt></a></span>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="../Language_Features.htm">Características lingüísticas</a></div>
        <div style="float:right">Siguiente: <a href="with.htm">con</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
exit
-->
  <!-- TAGS
exit
-->
</body>
</html>