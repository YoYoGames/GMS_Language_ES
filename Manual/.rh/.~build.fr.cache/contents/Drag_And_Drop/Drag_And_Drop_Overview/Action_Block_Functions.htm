
  
  Funciones de script del bloque de acción
  Uno de los activos más importantes del Navegador de Activos es el activo Script. Los scripts son activos especiales en el sentido de que son esencialmente "contenedores" de funciones definidas por el usuario y no son llamados por usted directamente en sus juegos.
    para las funciones definidas por el usuario y no son realmente llamados por usted directamente en sus juegos. Todos los scripts son de alcance global y serán ejecutados automáticamente por GameMaker cuando su juego se inicie, por lo que puede utilizarlos para definir las variables globales
    variables globales y las funciones que desea utilizar a través de su juego.
  Cada script de DnD™puede tener una o más funciones definidas por el usuario añadidas, y estas funciones se crean utilizando la acción Declarar una nueva función:
  Las funciones que definas aquí tendrán un alcance global y actuarán como cualquier acción integrada de DnD™
    es decir, pueden tomar diferentes valores - o ninguno - llamadosargumentos (o parámetros), y luego realizar una tarea, devolviendo un valor o no devolviendo nada
    según sea necesario. A continuación, llamarías a la función en tus juegos utilizando la acción de llamada a la función , que tiene el siguiente aspecto:
  Para crear un script de DnD™, basta con utilizar el botón derecho del ratón  en cualquier lugar del Navegador de Activos y seleccionar Crear y luego Script. Esto creará un nuevo script de DnD™y abrirá la ventana del editor:
  Puede nombrar el script haciendo clic con el botón derecho del ratón en  en el Navegador de Activos y seleccionando Renombrar (o haciendo un doble clic izquierdo lento ), pero tenga en cuenta que el nombre del script
    debe ajustarse a las reglas generales de los activos, por lo que debe comenzar con una letra y contener sólo letras, números o el símbolo de la barra inferior "_". Su script también será pre-rellenado con una acción de Declarar una nueva función,
    lista para que usted la rellene, y puede añadir más declaraciones de funciones según sea necesario (un solo script puede contener múltiples funciones, lo cual es útil para agrupar funciones con un uso similar o conectado).
  Como se ha mencionado anteriormente, puedes pasar un número de argumentos a una función, y ésta los utilizará para realizar la tarea para la que la has escrito. Para entender esto mejor, toma - por ejemplo - cualquiera de las acciones incorporadas y piensa en cómo funciona... tú
    la colocas en un evento y proporcionas un número de valores y hará que tu instancia haga algo. Las funciones definidas por el usuario son exactamente lo mismo, con la única diferencia de que tú las escribes.
  Cuando se define una nueva función, se le da un nombre y también se define el nombre de los argumentos que toma, si es que toma alguno (las funciones pueden no tomar argumentos o tomar múltiples argumentos dependiendo de lo que se requiera). Si se le da un nombre a los argumentos, éstos se utilizarán en las acciones a las que llame la función.
    Si da nombres de argumentos, éstos se utilizarán en las acciones a las que llame la función como variables locales que contienen los valores de entrada de la función.
  También es una buena práctica añadir un comentario para la acción que explique lo que hace, siguiendo las reglas de JS Doc. Por ejemplo, considere esta función set_vec():
  Para llamar al script de arriba simplemente se debe usar la acción de Llamar Función,
    así:
  No sólo puede pasar argumentos a una función, sino que también puede pedir a una función que devuelva un valor
    (utilizando la acción Return  ), por lo que puedes
    puede utilizarlos para (por ejemplo) construir métodos de cálculo o devolver un ID de instancia después de una detección de colisión compleja o cualquier número de cosas. Tenga en cuenta, sin embargo, que el uso de return finaliza la función, por lo que no se ejecutará ninguna acción colocada después de
    se ejecutará, y esto significa que hay que pensar bien cómo se estructuran las funciones.
  A continuación se muestra una función de arrastrar y soltar que devuelve un valor:
  
  La función anterior simplemente comprueba todas las instancias de una sala para ver cuál es su object_index y si una de ellas es el objeto jugador la función devolverá true (finalizando la llamada a la función) o
    false . Usted llamaría a esta función de la siguiente manera:
  Así, llamamos a la función y hacemos que cree una variable temporal (local) para almacenar el valor devuelto
    (que en este caso es true o false), y luego se comprueba esta variable y se realiza una acción.
  Al hacer funciones para tus scripts de DnD™puedes utilizar todas las mismas acciones que cuando añades acciones en un evento de objeto, e incluso puedes llamar a funciones desde dentro de funciones, y de esta manera crear un código de acción más "modular". La construcción de scripts en
    scripts con funciones de esta manera puede ahorrarte mucho tiempo creando las mismas secuencias de acción y también puede ayudar a que tus secuencias de acción sean más fáciles de leer y de depurar.
   
   
   
  
    
      
        Volver: Index
        Siguiente: Cambiar DnD™a código
      
    
    Copyright YoYo Games Ltd. 2021 Todos los derechos reservados
  
  
  

